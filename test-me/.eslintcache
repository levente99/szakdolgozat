[{"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\index.tsx":"1","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\reportWebVitals.ts":"2","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\App.tsx":"3","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\Home\\Home.tsx":"4","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\common\\Navigation.tsx":"5","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\MyTests\\MyTests.tsx":"6","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\MyTests\\Gameboy\\Gameboy.tsx":"7","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\Authentication\\Authentication.tsx":"8","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CreateTest\\CreateTest.tsx":"9","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\CompleteTest.tsx":"10","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\Question\\Question.tsx":"11","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\QuestionType\\QuestionType.tsx":"12","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\Results\\Results.tsx":"13"},{"size":331,"mtime":1616873762087,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1156,"mtime":1619636044960,"results":"17","hashOfConfig":"15"},{"size":5141,"mtime":1619638649028,"results":"18","hashOfConfig":"15"},{"size":3022,"mtime":1618746971622,"results":"19","hashOfConfig":"15"},{"size":5047,"mtime":1619369274116,"results":"20","hashOfConfig":"15"},{"size":3218,"mtime":1618775137199,"results":"21","hashOfConfig":"15"},{"size":16690,"mtime":1619636058658,"results":"22","hashOfConfig":"15"},{"size":25728,"mtime":1619635991302,"results":"23","hashOfConfig":"15"},{"size":7072,"mtime":1618848761046,"results":"24","hashOfConfig":"15"},{"size":9635,"mtime":1618676995783,"results":"25","hashOfConfig":"15"},{"size":1399,"mtime":1618677004230,"results":"26","hashOfConfig":"15"},{"size":5926,"mtime":1619638419383,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ho9eh0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\index.tsx",[],["61","62"],"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\reportWebVitals.ts",[],"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\App.tsx",["63"],"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\Home\\Home.tsx",["64","65"],"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\common\\Navigation.tsx",["66","67","68"],"import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport configData from '../../config.json';\r\n\r\ninterface NavigationProps {\r\n    renderNav: boolean;\r\n}\r\n\r\ninterface NavigationState {\r\n    loggedIn: boolean;\r\n    redirect: boolean;\r\n}\r\n\r\nexport default class Navigation extends Component<NavigationProps, NavigationState> {\r\n\r\n    constructor(props: NavigationProps) {\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: false,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchSession().then((sessionRes) => {\r\n            sessionRes == undefined ? this.setState({ loggedIn: false }) : this.setState({ loggedIn: true });\r\n        }).then(async () => {\r\n            await this.fetchSession().then((sessionRes) => {\r\n                sessionRes == undefined ? this.setState({ loggedIn: false }) : this.setState({ loggedIn: true });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/auth\" />\r\n        }\r\n        return (\r\n            this.props.renderNav ?\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            alt=\"\"\r\n                            src=\"/gameboy-logo.png\"\r\n                            width=\"40\"\r\n                            className=\"d-inline-block align-center\"\r\n                        />{' '}\r\n                        Test ME\r\n                    </Navbar.Brand>\r\n                    <Nav className=\"ml-auto\">\r\n\r\n                        {this.state.loggedIn ?\r\n                            <>\r\n                                <Nav.Link href=\"/tests\">Tesztjeim</Nav.Link>\r\n                                <Nav.Link href=\"/create\">Teszt készítése</Nav.Link>\r\n                                <img src=\"/img/exit.svg\" onClick={this.callLogout} style={{ width: 40, marginLeft: 7, cursor: 'pointer' }} />\r\n                            </> :\r\n                            <Nav.Link href=\"/auth\">Bejelentkezés</Nav.Link>}\r\n                    </Nav>\r\n                </Navbar> : null\r\n        );\r\n    }\r\n\r\n    callLogout = () => {\r\n        fetch(`${configData.SERVER_URL}/logout`, { method: 'POST' })\r\n            .then(() => {\r\n                document.cookie = \".AspNetCore.Session=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                this.setState({ loggedIn: false, redirect: true });\r\n            });\r\n    }\r\n\r\n    fetchSession = async () => {\r\n        let sessionRes: string | undefined;\r\n        await fetch(`${configData.SERVER_URL}/users/fetch-from-session`, { method: 'GET', credentials: 'include' })\r\n            .then(function (body) {\r\n                return body.text();\r\n            }).then((response) => {\r\n                if (response)\r\n                    sessionRes = response;\r\n            });\r\n        return sessionRes;\r\n    }\r\n};","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\MyTests\\MyTests.tsx",["69","70","71","72"],"import React, { Component } from 'react';\r\nimport { Dropdown, DropdownButton, Spinner } from 'react-bootstrap';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport { Gameboy } from './Gameboy/Gameboy';\r\nimport configData from '../../config.json';\r\nimport './MyTests.css';\r\nimport Navigation from '../common/Navigation';\r\n\r\nexport default class MyTests extends Component {\r\n    state = {\r\n        userId: \"\",\r\n        usersTests: [\r\n            {\r\n                id: 0,\r\n                user: {\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                },\r\n                test: {\r\n                    id: \"\",\r\n                    userId: \"\",\r\n                    user: {\r\n                        firstName: \"\",\r\n                        lastName: \"\"\r\n                    },\r\n                    description: \"\",\r\n                    title: \"\",\r\n                    created: \"\",\r\n                    deadline: \"\",\r\n                    questions: [\r\n                        {\r\n                            \"timeLimit\": 0,\r\n                            \"xp\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                finished: \"\",\r\n                earnedXp: 0\r\n            }\r\n        ],\r\n        order: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${configData.SERVER_URL}/users/fetch-from-session`, {\r\n            method: 'GET', credentials: \"include\",\r\n            mode: 'cors'\r\n        }).then(function (body) {\r\n            return body.text();\r\n        }).then((response) => {\r\n            this.setState({ userId: response });\r\n            fetch(`${configData.SERVER_URL}/users-tests/${response}`, {\r\n                method: 'GET',\r\n            })\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    this.setState({ usersTests: response });\r\n                })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var userTestCopy = [...this.state.usersTests];\r\n        const orderedTests = () => {\r\n            switch (this.state.order) {\r\n                case 0:\r\n                    userTestCopy.sort((a, b) => a.test.created < b.test.created ? 1 : -1);\r\n                    break;\r\n                case 1:\r\n                    userTestCopy.sort((a, b) => a.test.created > b.test.created ? 1 : -1);\r\n                    break;\r\n                case 2:\r\n                    userTestCopy.sort((a, b) => a.finished != null ? 1 : -1);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return userTestCopy.map((userTest, i) =>\r\n                <Gameboy\r\n                    key={i}\r\n                    id={userTest.test.id}\r\n                    testName={userTest.test.title}\r\n                    firstName={userTest.test.user.firstName}\r\n                    lastName={userTest.test.user.lastName}\r\n                    createdTime={userTest.test.created.split('T')[0]}\r\n                    deadline={userTest.test.deadline.split('T')[0]}\r\n                    earnedXp={userTest.earnedXp}\r\n                    finished={userTest.finished}\r\n                    testTime={this.convertSecToMin(userTest.test.questions.reduce(function (a, b) {\r\n                        return +a + +b.timeLimit;\r\n                    }, 0))}\r\n                    questionNumber={userTest?.test?.questions?.length}\r\n                    xp={userTest.test.questions.reduce(function (a, b) {\r\n                        return +a + +b.xp;\r\n                    }, 0)}\r\n                    thisIsMyTest={userTest.test.userId == this.state.userId}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Navigation renderNav={true} />\r\n                {this.state.userId == \"\" ? <div className=\"alert alert-danger\" role=\"alert\">Jelentkezz be ha meg szeretnéd nézni a tesztjeidet!</div> :\r\n                    this.state.usersTests.length == 0 ? <div className=\"alert alert-success\" role=\"alert\">Nincsennek tesztek</div> :\r\n                        <div className=\"mytests-container\">\r\n                            <DropdownButton id=\"mytests-dropdown-button\" title=\"Rendezés\">\r\n                                <Dropdown.Item onClick={() => this.setState({ order: 0 })}>Legújabb</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => this.setState({ order: 1 })}>Legrégebbi</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => this.setState({ order: 2 })}>Kitöltetlenek</Dropdown.Item>\r\n                            </DropdownButton>\r\n                            <div className=\"gameboys-container\">\r\n                                <Scrollbars>\r\n                                    {orderedTests()}\r\n                                </Scrollbars>\r\n                            </div>\r\n                        </div>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    convertSecToMin(value: number): string {\r\n        return Math.floor(value / 60) + \":\" + (value % 60 ? value % 60 : '00')\r\n    }\r\n\r\n}","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\MyTests\\Gameboy\\Gameboy.tsx",["73"],"import React, { ReactNode } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Gameboy.css\";\r\n\r\ninterface GameboyProps {\r\n    id: string;\r\n    testName: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    createdTime: string;\r\n    deadline: string;\r\n    testTime: string;\r\n    questionNumber: number;\r\n    xp: number;\r\n    finished: string;\r\n    earnedXp: number;\r\n    thisIsMyTest: boolean;\r\n}\r\n\r\nexport const Gameboy: React.FC<GameboyProps> = ({ id, testName, firstName, lastName, createdTime, deadline, testTime, questionNumber, xp, finished, earnedXp, thisIsMyTest }: GameboyProps) => {\r\n    return (\r\n        <div className={finished == null ? \"gameboy\" : \"gameboy finished-gameboy-color\"}>\r\n            <div className=\"screen-cont\">\r\n                <div className=\"screen\">\r\n                    <div className=\"header\"></div>\r\n                    <div className=\"test-name\">{testName}</div>\r\n                    <div className=\"test-name\">{firstName + \" \" + lastName}</div>\r\n                    {finished == null ? null : <div className=\"gameboy-earned-xp-number\">{earnedXp}</div>}\r\n                    <div className=\"test-create-dates\">Kiírva: {createdTime}</div>\r\n                    <div className=\"test-deadline\">Kitöltési határidő: {deadline}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"controls-cont\">\r\n                <div className=\"btn-direction\">\r\n                    <div className=\"vertical\"></div>\r\n                    <div className=\"horizontal\"></div>\r\n                    <div className=\"stopwatch-icon\">⏱️</div>\r\n                    <div className=\"test-time\">{testTime}</div>\r\n                </div>\r\n                <div className=\"btn-AB\">\r\n                    <div className=\"question-number\">{questionNumber}</div>\r\n                    <div className=\"question-number-label\">Kérdések</div>\r\n                    <div className=\"xp-number\">{xp}</div>\r\n                    <div className=\"xp-number-label\">XP</div>\r\n                </div>\r\n                <div className=\"btn-select\"></div>\r\n                {\r\n                    thisIsMyTest ? (\r\n                        <>\r\n                            <Link to={`/results/${id}`} className=\"btn-start-finished\" />\r\n                            <div className=\"btn-start-label\">Eredmények</div>\r\n                        </>\r\n                    ) : (\r\n                        finished == null ? (\r\n                            <>\r\n                                <Link to={`/play/${id}`} className=\"btn-start\" />\r\n                                <div className=\"btn-start-label\">Kezdés</div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Link to={`/results/${id}`} className=\"btn-start-finished\" />\r\n                                <div className=\"btn-start-label\">Eredmények</div>\r\n                            </>\r\n                        )\r\n                    )\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n            <div className=\"speakers\"></div>\r\n            <div className=\"on-off\">off-on</div>\r\n            <div className=\"phones\">phones</div>\r\n        </div>\r\n    );\r\n}\r\n","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\Authentication\\Authentication.tsx",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CreateTest\\CreateTest.tsx",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\CompleteTest.tsx",["132","133","134"],"import './CompleteTest.css';\r\nimport React, { Component } from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport QuestionType from './QuestionType/QuestionType';\r\nimport Question from './Question/Question';\r\nimport configData from '../../config.json';\r\nimport Results from './Results/Results';\r\n\r\ninterface CompleteTestProps {\r\n}\r\n\r\ninterface answer {\r\n    responseTime: number;\r\n    userAnswer: number;\r\n}\r\n\r\ninterface CompleteTestState {\r\n    userTest: {\r\n        id: string;\r\n        test: {\r\n            id: string;\r\n            description: string;\r\n            userId: string;\r\n            title: string;\r\n            created: string;\r\n            deadline: string;\r\n            questions: [\r\n                {\r\n                    id: number\r\n                    problem: string;\r\n                    answerOne: string;\r\n                    answerTwo: string;\r\n                    answerThree?: string;\r\n                    answerFour?: string;\r\n                    timeLimit: number;\r\n                    xp: number;\r\n                    correctAnswer: number;\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    answers: answer[],\r\n    showTitle: boolean,\r\n    showQuestions: boolean,\r\n    showResults: boolean,\r\n    showedQuestion: number,\r\n    showQuestionType: boolean,\r\n    allEarnedXp: number,\r\n}\r\n\r\nexport default class CompleteTest extends React.Component<CompleteTestProps, CompleteTestState> {\r\n\r\n    constructor(props: CompleteTestProps) {\r\n        super(props);\r\n        this.state = {\r\n            userTest: {\r\n                id: '',\r\n                test: {\r\n                    id: '',\r\n                    description: '',\r\n                    userId: '',\r\n                    title: '',\r\n                    created: '',\r\n                    deadline: '',\r\n                    questions: [\r\n                        {\r\n                            id: 0,\r\n                            problem: '',\r\n                            answerOne: '',\r\n                            answerTwo: '',\r\n                            answerThree: '',\r\n                            answerFour: '',\r\n                            timeLimit: 0,\r\n                            xp: 0,\r\n                            correctAnswer: 0\r\n                        },\r\n                    ]\r\n                }\r\n            },\r\n            answers: [],\r\n            showTitle: false,\r\n            showQuestions: false,\r\n            showQuestionType: false,\r\n            showResults: false,\r\n            showedQuestion: 0,\r\n            allEarnedXp: 0\r\n        }\r\n\r\n        this.getNextQuestion = this.getNextQuestion.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await fetch(`${configData.SERVER_URL}/users/fetch-from-session`, {\r\n            method: 'GET', credentials: \"include\",\r\n            mode: 'cors'\r\n        }).then(function (body) {\r\n            return body.text();\r\n        }).then((response) => {\r\n            fetch(`${configData.SERVER_URL}/users-tests/${response}/${window.location.href.substring(window.location.href.lastIndexOf('/') + 1)}`, {\r\n                method: 'GET'\r\n            })\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    this.setState({ userTest: response[0] });\r\n                })\r\n        });\r\n\r\n        this.setState({ showQuestionType: true });\r\n        await this.showQuestionTypeTimeout();\r\n        this.setState({ showQuestionType: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.showResults ? <Results testId={this.state.userTest.test.id} /> :\r\n                this.state.showedQuestion < this.state.userTest.test.questions.length ?\r\n                    this.state.showQuestionType ?\r\n                        <QuestionType\r\n                            problem={this.state.userTest.test.questions[this.state.showedQuestion].problem}\r\n                            isQuestionQuiz={this.state.userTest.test.questions[this.state.showedQuestion].answerFour != null}\r\n                        /> :\r\n                        this.state.userTest.test.title != '' ? <Question\r\n                            id={this.state.userTest.test.questions[this.state.showedQuestion].id}\r\n                            questionNumber={this.state.showedQuestion}\r\n                            problem={this.state.userTest.test.questions[this.state.showedQuestion].problem}\r\n                            answerOne={this.state.userTest.test.questions[this.state.showedQuestion].answerOne}\r\n                            answerTwo={this.state.userTest.test.questions[this.state.showedQuestion].answerTwo}\r\n                            answerThree={this.state.userTest.test.questions[this.state.showedQuestion].answerThree}\r\n                            answerFour={this.state.userTest.test.questions[this.state.showedQuestion].answerFour}\r\n                            timeLimit={this.state.userTest.test.questions[this.state.showedQuestion].timeLimit}\r\n                            xp={this.state.userTest.test.questions[this.state.showedQuestion].xp}\r\n                            correctAnswer={this.state.userTest.test.questions[this.state.showedQuestion].correctAnswer}\r\n                            passAnswerData={this.getNextQuestion}\r\n                        /> : null\r\n                    : <Spinner animation=\"border\" variant=\"primary\" className=\"centered-big-spinner\" />\r\n        )\r\n    }\r\n\r\n    async getNextQuestion(answer: number, questionNumber: number, responseTime: number, earnedXp: number) {\r\n        this.setState({ showQuestionType: true });\r\n        this.setState({ answers: this.state.answers.concat({ responseTime: responseTime, userAnswer: answer }), allEarnedXp: this.state.allEarnedXp + earnedXp, showedQuestion: this.state.showedQuestion + 1 })\r\n\r\n        await this.showQuestionTypeTimeout();\r\n        if (this.state.showedQuestion == this.state.userTest.test.questions.length) {\r\n            await this.sendResults();\r\n            this.setState({ showResults: true });\r\n        }\r\n        this.setState({ showQuestionType: false });\r\n    }\r\n\r\n    sendResults = async () => {\r\n        await fetch(`${configData.SERVER_URL}/users-tests/${this.state.userTest.id}/update-xp/${this.state.allEarnedXp}`, {\r\n            method: 'PUT'\r\n        }).then(() => {\r\n            this.state.answers.forEach(async (answer, index) => {\r\n                await fetch(`${configData.SERVER_URL}/answers`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        QuestionId: this.state.userTest.test.questions[index].id,\r\n                        UsersTestId: this.state.userTest.id,\r\n                        ResponseTime: answer.responseTime,\r\n                        UserAnswer: answer.userAnswer\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    showQuestionTypeTimeout = () => {\r\n        return new Promise(res => setTimeout(res, 3000));\r\n    }\r\n}\r\n","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\Question\\Question.tsx",["135","136","137","138","139","140","141","142","143","144","145"],"import React, { Component, useEffect } from 'react'\r\nimport { Alert, Form } from 'react-bootstrap';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport confetti from 'canvas-confetti';\r\nimport './Question.css';\r\n\r\ninterface QuestionProps {\r\n    id: number;\r\n    questionNumber: number;\r\n    problem: string;\r\n    answerOne: string;\r\n    answerTwo: string;\r\n    answerThree?: string;\r\n    answerFour?: string;\r\n    timeLimit: number;\r\n    xp: number;\r\n    correctAnswer: number;\r\n    passAnswerData: (answer: number, questionId: number, responseTime: number, earnedXp: number) => void;\r\n}\r\n\r\ninterface QuestionState {\r\n    secondsLeft: number;\r\n    responseTime: number;\r\n    earnedXp: number;\r\n    disableClick: boolean;\r\n    questionBgColors: string[];\r\n}\r\n\r\nexport default class Question extends React.Component<QuestionProps, QuestionState> {\r\n    constructor(prop: QuestionProps) {\r\n        super(prop);\r\n\r\n        this.state = {\r\n            //                 answer 1   answer 2   answer 3   answer 4   background\r\n            questionBgColors: [\"#66a3ff\", \"#FF6868\", \"#FFAB2C\", \"#68C95C\", \"#e0efff\"],\r\n            secondsLeft: -1,\r\n            responseTime: -1,\r\n            earnedXp: 0,\r\n            disableClick: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: { problem: string; }) {\r\n        this.setState({ secondsLeft: this.props.timeLimit });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ secondsLeft: this.props.timeLimit });\r\n\r\n        let intervalId = setInterval(() => {\r\n            const { secondsLeft } = this.state\r\n\r\n            if (secondsLeft > 0) {\r\n                this.setState({ secondsLeft: secondsLeft - 1 });\r\n            } else if (secondsLeft == 0) {\r\n                this.timeOut();\r\n                clearInterval(intervalId);\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        const { problem, answerOne, answerTwo, answerThree, answerFour, timeLimit, xp, correctAnswer } = this.props;\r\n\r\n\r\n        return (\r\n            <div style={{ backgroundColor: this.state.questionBgColors[4] }} className=\"create question-container\">\r\n                <Form.Group className=\"question-text\">\r\n                    <Form.Label>\r\n                        {problem}\r\n                    </Form.Label>\r\n                    <Form.Group className=\"asnwer-result popout\">\r\n                        {this.state.earnedXp > 0 ? <><Alert className=\"good-result\" variant=\"success\">\r\n                            <p>Helyes válasz!</p>\r\n                            <p>{this.state.earnedXp} XP</p>\r\n                        </Alert> </> : null}\r\n\r\n                        {this.state.earnedXp == -1 ? <Alert className=\"bad-result-text\" variant=\"danger\">\r\n                            Rossz válasz 😞\r\n                    </Alert> : null}\r\n                    </Form.Group>\r\n                </Form.Group >\r\n\r\n\r\n                <div className=\"question-details\">\r\n                    <Form.Group className=\"time-limit\" controlId=\"formBasicRange\">\r\n                        <Form.Label className=\"time-label\">\r\n                            {this.state.disableClick == false ? <CountdownCircleTimer\r\n                                isPlaying\r\n                                duration={this.props.timeLimit}\r\n                                colors={[\r\n                                    ['#004777', 0.33],\r\n                                    ['#F7B801', 0.33],\r\n                                    ['#A30000', 0.33],\r\n                                ]}>\r\n                                {({ remainingTime }) => remainingTime}\r\n                            </CountdownCircleTimer> : null}\r\n\r\n                        </Form.Label>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n                {\r\n                    answerFour != null ?\r\n                        <Form.Group className=\"answers\">\r\n                            <Form.Group style={{ backgroundColor: this.state.questionBgColors[0] }} className=\"play-answers-one\" id=\"0\" onClick={this.handleAnswerInput}>\r\n                                <Form.Label className=\"answer-text\">{answerOne}</Form.Label>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group style={{ backgroundColor: this.state.questionBgColors[1] }} className=\"play-answers-two\" id=\"1\" onClick={this.handleAnswerInput}>\r\n                                <Form.Label className=\"answer-text\">{answerTwo}</Form.Label>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group style={{ backgroundColor: this.state.questionBgColors[2] }} className=\"play-answers-three\" id=\"2\" onClick={this.handleAnswerInput}>\r\n                                <Form.Label className=\"answer-text\">{answerThree}</Form.Label>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group style={{ backgroundColor: this.state.questionBgColors[3] }} className=\"play-answers-four\" id=\"3\" onClick={this.handleAnswerInput}>\r\n                                <Form.Label className=\"answer-text\">{answerFour}</Form.Label>\r\n                            </Form.Group>\r\n                        </Form.Group> :\r\n                        <Form.Group className=\"answers\">\r\n                            <Form.Group style={{ backgroundColor: this.state.questionBgColors[0] }} className=\"play-answers-one\" id=\"0\" onClick={this.handleAnswerInput}>\r\n                                <Form.Label className=\"answers-true-label\">Igaz</Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group style={{ backgroundColor: this.state.questionBgColors[1] }} className=\"play-answers-two\" id=\"1\" onClick={this.handleAnswerInput}>\r\n                                <Form.Label className=\"answers-false-label\">Hamis</Form.Label>\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n\r\n    handleAnswerInput = async (e: React.MouseEvent<HTMLElement>) => {\r\n        const { correctAnswer } = this.props;\r\n        const { disableClick } = this.state;\r\n        this.setState({ disableClick: true });\r\n        if (!disableClick) {\r\n            if (+((e.target as HTMLTextAreaElement).id) != correctAnswer) {\r\n                this.badAnswer(+((e.target as HTMLTextAreaElement).id))\r\n            } else {\r\n                this.goodAnswer(+((e.target as HTMLTextAreaElement).id));\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    async timeOut() {\r\n        const { questionNumber } = this.props;\r\n        this.setState({ disableClick: true, earnedXp: -1 });\r\n\r\n        const newquestionBgColors = this.state.questionBgColors.slice()\r\n        for (let i = 0; i < this.state.questionBgColors.length - 1; i++) {\r\n            newquestionBgColors[i] = \"#ff1919\"\r\n        }\r\n        newquestionBgColors[this.props.correctAnswer] = \"#09bd57\"\r\n        newquestionBgColors[4] = \"#ffb8b8\"\r\n        this.setState({ questionBgColors: newquestionBgColors })\r\n\r\n        await this.afterQuestionTimeout();\r\n        this.props.passAnswerData(-1, questionNumber, -1, 0);\r\n    }\r\n\r\n    async badAnswer(answer: number) {\r\n        const { questionNumber } = this.props;\r\n        this.setState({ responseTime: this.props.timeLimit - this.state.secondsLeft, disableClick: true, earnedXp: -1 });\r\n        this.setState({ secondsLeft: -1 });\r\n\r\n        const newquestionBgColors = this.state.questionBgColors.slice()\r\n        for (let i = 0; i < this.state.questionBgColors.length - 1; i++) {\r\n            newquestionBgColors[i] = \"#ff1919\"\r\n        }\r\n        newquestionBgColors[answer] = \"#ff9494\";\r\n        newquestionBgColors[this.props.correctAnswer] = \"#09bd57\"\r\n        newquestionBgColors[4] = \"#ffb8b8\"\r\n        this.setState({ questionBgColors: newquestionBgColors })\r\n\r\n        await this.afterQuestionTimeout();\r\n        this.props.passAnswerData(answer, questionNumber, this.state.responseTime, 0);\r\n    }\r\n\r\n    async goodAnswer(answer: number) {\r\n        const { questionNumber, timeLimit, xp } = this.props;\r\n        const { secondsLeft, questionBgColors } = this.state;\r\n\r\n        this.setState({ disableClick: true });\r\n        let earnedXp = this.props.timeLimit - this.state.secondsLeft == -1 || this.props.timeLimit - this.state.secondsLeft == 0 ? xp : Math.floor((((timeLimit - secondsLeft) / timeLimit) / 2) * xp);\r\n\r\n        this.setState({ earnedXp: earnedXp });\r\n        this.setState({ responseTime: this.props.timeLimit - this.state.secondsLeft });\r\n        this.setState({ secondsLeft: -1 });\r\n\r\n        const newquestionBgColors = questionBgColors.slice()\r\n        for (let i = 0; i < questionBgColors.length - 1; i++) {\r\n            newquestionBgColors[i] = \"#ff1919\"\r\n        }\r\n        newquestionBgColors[answer] = \"#09bd57\"\r\n        newquestionBgColors[4] = \"#e8ffea\"\r\n        this.setState({ questionBgColors: newquestionBgColors })\r\n\r\n        this.tossConfetti()\r\n        await this.afterQuestionTimeout();\r\n        this.props.passAnswerData(answer, questionNumber, this.state.responseTime, earnedXp)\r\n    }\r\n\r\n    afterQuestionTimeout = () => {\r\n        return new Promise(res => setTimeout(res, 3000));\r\n    }\r\n\r\n\r\n    tossConfetti = () => {\r\n        confetti({\r\n            spread: 50,\r\n            startVelocity: 55,\r\n        });\r\n        confetti({\r\n            spread: 80,\r\n        });\r\n        confetti({\r\n            spread: 120,\r\n            startVelocity: 25,\r\n            decay: 0.92,\r\n            scalar: 1.2\r\n        });\r\n        confetti({\r\n            spread: 150,\r\n            decay: 0.91,\r\n            scalar: 0.8\r\n        });\r\n    }\r\n}","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\QuestionType\\QuestionType.tsx",["146","147","148"],"import React from 'react'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport './QuestionType.css';\r\n\r\ninterface QuestionTypeProps {\r\n    problem: string;\r\n    isQuestionQuiz: boolean;\r\n}\r\n\r\n\r\nexport default class extends React.Component<QuestionTypeProps>{\r\n    render() {\r\n        return (\r\n            <div className=\"question-type-container\" >\r\n                <div className=\"question-type-wrap\">\r\n                    <div className=\"question-type-img\">\r\n                        {this.props.isQuestionQuiz ? <img src=\"/img/quiz_icon.png\" /> : <img src=\"/img/true_false_icon.png\" />}\r\n                    </div>\r\n                    <div className=\"question-type-text\">\r\n                        {this.props.problem}\r\n                    </div>\r\n                    <div className=\"question-type-timer\">\r\n                        <CountdownCircleTimer\r\n                            isPlaying\r\n                            duration={3}\r\n                            colors={[\r\n                                ['#004777', 0.33],\r\n                                ['#F7B801', 0.33],\r\n                                ['#A30000', 0.33],\r\n                            ]}>\r\n                            {({ remainingTime }) => remainingTime}\r\n                        </CountdownCircleTimer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","A:\\Dokumentumok\\Egyetem\\5_felev\\Szakdolgozat_1\\szakdolgozat_frontend\\test-me\\src\\components\\CompleteTest\\Results\\Results.tsx",["149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":18},{"ruleId":"154","severity":1,"message":"158","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":85,"column":44,"nodeType":"161","messageId":"162","endLine":85,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":27,"column":24,"nodeType":"161","messageId":"162","endLine":27,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":30,"column":28,"nodeType":"161","messageId":"162","endLine":30,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":57,"column":33,"nodeType":"165","endLine":57,"endColumn":142},{"ruleId":"154","severity":1,"message":"166","line":2,"column":36,"nodeType":"156","messageId":"157","endLine":2,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":96,"column":56,"nodeType":"161","messageId":"162","endLine":96,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":104,"column":36,"nodeType":"161","messageId":"162","endLine":104,"endColumn":38},{"ruleId":"159","severity":1,"message":"160","line":105,"column":50,"nodeType":"161","messageId":"162","endLine":105,"endColumn":52},{"ruleId":"154","severity":1,"message":"167","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":66,"column":47,"nodeType":"161","messageId":"162","endLine":66,"endColumn":49},{"ruleId":"159","severity":1,"message":"160","line":66,"column":97,"nodeType":"161","messageId":"162","endLine":66,"endColumn":99},{"ruleId":"159","severity":1,"message":"160","line":66,"column":147,"nodeType":"161","messageId":"162","endLine":66,"endColumn":149},{"ruleId":"159","severity":1,"message":"160","line":66,"column":199,"nodeType":"161","messageId":"162","endLine":66,"endColumn":201},{"ruleId":"159","severity":1,"message":"160","line":66,"column":250,"nodeType":"161","messageId":"162","endLine":66,"endColumn":252},{"ruleId":"159","severity":1,"message":"160","line":66,"column":309,"nodeType":"161","messageId":"162","endLine":66,"endColumn":311},{"ruleId":"159","severity":1,"message":"160","line":66,"column":371,"nodeType":"161","messageId":"162","endLine":66,"endColumn":373},{"ruleId":"159","severity":1,"message":"160","line":66,"column":433,"nodeType":"161","messageId":"162","endLine":66,"endColumn":435},{"ruleId":"159","severity":1,"message":"160","line":69,"column":52,"nodeType":"161","messageId":"162","endLine":69,"endColumn":54},{"ruleId":"159","severity":1,"message":"160","line":69,"column":114,"nodeType":"161","messageId":"162","endLine":69,"endColumn":116},{"ruleId":"159","severity":1,"message":"160","line":84,"column":51,"nodeType":"161","messageId":"162","endLine":84,"endColumn":53},{"ruleId":"159","severity":1,"message":"160","line":84,"column":97,"nodeType":"161","messageId":"162","endLine":84,"endColumn":99},{"ruleId":"159","severity":1,"message":"160","line":154,"column":51,"nodeType":"161","messageId":"162","endLine":154,"endColumn":53},{"ruleId":"159","severity":1,"message":"160","line":155,"column":55,"nodeType":"161","messageId":"162","endLine":155,"endColumn":57},{"ruleId":"159","severity":1,"message":"160","line":156,"column":54,"nodeType":"161","messageId":"162","endLine":156,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":157,"column":54,"nodeType":"161","messageId":"162","endLine":157,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":158,"column":54,"nodeType":"161","messageId":"162","endLine":158,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":186,"column":63,"nodeType":"161","messageId":"162","endLine":186,"endColumn":65},{"ruleId":"159","severity":1,"message":"160","line":200,"column":71,"nodeType":"161","messageId":"162","endLine":200,"endColumn":73},{"ruleId":"159","severity":1,"message":"160","line":234,"column":89,"nodeType":"161","messageId":"162","endLine":234,"endColumn":91},{"ruleId":"159","severity":1,"message":"160","line":238,"column":89,"nodeType":"161","messageId":"162","endLine":238,"endColumn":91},{"ruleId":"159","severity":1,"message":"168","line":290,"column":79,"nodeType":"161","messageId":"162","endLine":290,"endColumn":81},{"ruleId":"159","severity":1,"message":"168","line":298,"column":71,"nodeType":"161","messageId":"162","endLine":298,"endColumn":73},{"ruleId":"159","severity":1,"message":"160","line":301,"column":79,"nodeType":"161","messageId":"162","endLine":301,"endColumn":81},{"ruleId":"159","severity":1,"message":"160","line":129,"column":68,"nodeType":"161","messageId":"162","endLine":129,"endColumn":70},{"ruleId":"163","severity":1,"message":"164","line":131,"column":25,"nodeType":"165","endLine":131,"endColumn":126},{"ruleId":"159","severity":1,"message":"160","line":133,"column":72,"nodeType":"161","messageId":"162","endLine":133,"endColumn":74},{"ruleId":"163","severity":1,"message":"164","line":143,"column":21,"nodeType":"165","endLine":143,"endColumn":118},{"ruleId":"159","severity":1,"message":"160","line":157,"column":39,"nodeType":"161","messageId":"162","endLine":157,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":178,"column":233,"nodeType":"161","messageId":"162","endLine":178,"endColumn":235},{"ruleId":"159","severity":1,"message":"160","line":185,"column":120,"nodeType":"161","messageId":"162","endLine":185,"endColumn":122},{"ruleId":"159","severity":1,"message":"160","line":186,"column":152,"nodeType":"161","messageId":"162","endLine":186,"endColumn":154},{"ruleId":"159","severity":1,"message":"160","line":190,"column":125,"nodeType":"161","messageId":"162","endLine":190,"endColumn":127},{"ruleId":"159","severity":1,"message":"160","line":191,"column":148,"nodeType":"161","messageId":"162","endLine":191,"endColumn":150},{"ruleId":"159","severity":1,"message":"160","line":195,"column":70,"nodeType":"161","messageId":"162","endLine":195,"endColumn":72},{"ruleId":"159","severity":1,"message":"160","line":198,"column":153,"nodeType":"161","messageId":"162","endLine":198,"endColumn":155},{"ruleId":"159","severity":1,"message":"160","line":201,"column":94,"nodeType":"161","messageId":"162","endLine":201,"endColumn":96},{"ruleId":"159","severity":1,"message":"160","line":201,"column":139,"nodeType":"161","messageId":"162","endLine":201,"endColumn":141},{"ruleId":"159","severity":1,"message":"160","line":208,"column":153,"nodeType":"161","messageId":"162","endLine":208,"endColumn":155},{"ruleId":"159","severity":1,"message":"160","line":211,"column":94,"nodeType":"161","messageId":"162","endLine":211,"endColumn":96},{"ruleId":"159","severity":1,"message":"160","line":211,"column":139,"nodeType":"161","messageId":"162","endLine":211,"endColumn":141},{"ruleId":"159","severity":1,"message":"160","line":218,"column":172,"nodeType":"161","messageId":"162","endLine":218,"endColumn":174},{"ruleId":"159","severity":1,"message":"160","line":221,"column":94,"nodeType":"161","messageId":"162","endLine":221,"endColumn":96},{"ruleId":"159","severity":1,"message":"160","line":221,"column":139,"nodeType":"161","messageId":"162","endLine":221,"endColumn":141},{"ruleId":"159","severity":1,"message":"160","line":228,"column":171,"nodeType":"161","messageId":"162","endLine":228,"endColumn":173},{"ruleId":"159","severity":1,"message":"160","line":231,"column":94,"nodeType":"161","messageId":"162","endLine":231,"endColumn":96},{"ruleId":"159","severity":1,"message":"160","line":231,"column":139,"nodeType":"161","messageId":"162","endLine":231,"endColumn":141},{"ruleId":"159","severity":1,"message":"160","line":243,"column":94,"nodeType":"161","messageId":"162","endLine":243,"endColumn":96},{"ruleId":"159","severity":1,"message":"160","line":243,"column":139,"nodeType":"161","messageId":"162","endLine":243,"endColumn":141},{"ruleId":"159","severity":1,"message":"160","line":253,"column":94,"nodeType":"161","messageId":"162","endLine":253,"endColumn":96},{"ruleId":"159","severity":1,"message":"160","line":253,"column":139,"nodeType":"161","messageId":"162","endLine":253,"endColumn":141},{"ruleId":"159","severity":1,"message":"168","line":302,"column":58,"nodeType":"161","messageId":"162","endLine":302,"endColumn":60},{"ruleId":"163","severity":1,"message":"164","line":303,"column":80,"nodeType":"165","endLine":308,"endColumn":59},{"ruleId":"159","severity":1,"message":"168","line":391,"column":45,"nodeType":"161","messageId":"162","endLine":391,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":427,"column":19,"nodeType":"161","messageId":"162","endLine":427,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":429,"column":57,"nodeType":"161","messageId":"162","endLine":429,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":431,"column":17,"nodeType":"156","messageId":"171","endLine":431,"endColumn":31},{"ruleId":"159","severity":1,"message":"160","line":432,"column":57,"nodeType":"161","messageId":"162","endLine":432,"endColumn":59},{"ruleId":"154","severity":1,"message":"158","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":26},{"ruleId":"159","severity":1,"message":"168","line":122,"column":56,"nodeType":"161","messageId":"162","endLine":122,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":144,"column":39,"nodeType":"161","messageId":"162","endLine":144,"endColumn":41},{"ruleId":"154","severity":1,"message":"158","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"172","line":1,"column":28,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":55,"column":36,"nodeType":"161","messageId":"162","endLine":55,"endColumn":38},{"ruleId":"154","severity":1,"message":"173","line":63,"column":73,"nodeType":"156","messageId":"157","endLine":63,"endColumn":82},{"ruleId":"154","severity":1,"message":"174","line":63,"column":84,"nodeType":"156","messageId":"157","endLine":63,"endColumn":86},{"ruleId":"154","severity":1,"message":"175","line":63,"column":88,"nodeType":"156","messageId":"157","endLine":63,"endColumn":101},{"ruleId":"159","severity":1,"message":"160","line":78,"column":46,"nodeType":"161","messageId":"162","endLine":78,"endColumn":48},{"ruleId":"159","severity":1,"message":"160","line":88,"column":54,"nodeType":"161","messageId":"162","endLine":88,"endColumn":56},{"ruleId":"159","severity":1,"message":"168","line":140,"column":57,"nodeType":"161","messageId":"162","endLine":140,"endColumn":59},{"ruleId":"159","severity":1,"message":"160","line":189,"column":70,"nodeType":"161","messageId":"162","endLine":189,"endColumn":72},{"ruleId":"159","severity":1,"message":"160","line":189,"column":125,"nodeType":"161","messageId":"162","endLine":189,"endColumn":127},{"ruleId":"176","severity":1,"message":"177","line":11,"column":1,"nodeType":"178","endLine":38,"endColumn":2},{"ruleId":"163","severity":1,"message":"164","line":17,"column":54,"nodeType":"165","endLine":17,"endColumn":86},{"ruleId":"163","severity":1,"message":"164","line":17,"column":89,"nodeType":"165","endLine":17,"endColumn":127},{"ruleId":"154","severity":1,"message":"155","line":2,"column":16,"nodeType":"156","messageId":"157","endLine":2,"endColumn":24},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Spinner' is defined but never used.","'ReactNode' is defined but never used.","Expected '!==' and instead saw '!='.","@typescript-eslint/no-redeclare","'questions' is already defined.","redeclared","'useEffect' is defined but never used.","'timeLimit' is assigned a value but never used.","'xp' is assigned a value but never used.","'correctAnswer' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]